@page "/"
@inject HttpClient Http
@inject IJSRuntime JsRuntime;

<div class="d-flex justify-content-center mt-2">
    <h3>Having a bad day?</h3>
</div>
<div class="d-flex justify-content-center mt-2">
    <button class="btn btn-outline-success" @onclick="Callback">@_clickMessage</button>
</div>
<div class="d-flex justify-content-center mt-4">
    @if (_mediaSelected is not null)
    {
        <div>
            @if (_mediaSelected.Type == TypeMedia.Video)
            {
                <iframe title="YouTube video player" src="https://www.youtube.com/embed/@_mediaSelected.Id" width="560" height="315" frameborder="0" allowfullscreen="allowfullscreen"></iframe>
            }
            @if (_mediaSelected.Type == TypeMedia.Instagram)
            {
                <iframe src="https://www.instagram.com/p/@(_mediaSelected.Id)/embed"
                        width="540"
                        height="600"
                        frameborder="0"
                        scrolling="no"
                        allowtransparency>
                </iframe>
            }
        </div>
    }
</div>

@code {

    /*
     * Todo :
     *  Suggestion de video ou image
     *
     */

    private FunnyMedia[]? _videos;

    FunnyMedia? _mediaSelected;

    string _clickMessage = "Click here !";

    protected override async Task OnInitializedAsync()
    {
        _videos = await Http.GetFromJsonAsync<FunnyMedia[]>("sample-data/FunnyMedias.json");
    }

    private async Task Callback()
    {
        if (_videos is null)
        {
            return;
        }

        var rand = new Random();

        _mediaSelected = _videos[rand.Next(_videos.Length)];

        if (_mediaSelected.Type == TypeMedia.Instagram)
        {
            await RefreshInstagramEmbeds();
        }

        _clickMessage = "Click here again!";
    }

    private async Task RefreshInstagramEmbeds()
    {
        await JsRuntime.InvokeVoidAsync("refreshInstagramEmbed");
    }

    public class FunnyMedia
    {
        public string Name { get; set; }
        public string Id { get; set; }
        public TypeMedia Type { get; set; }
    }

    public enum TypeMedia
    {
        Video = 1,
        Image = 2,
        Instagram = 3
    }

}